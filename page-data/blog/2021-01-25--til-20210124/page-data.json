{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/blog/2021-01-25--til-20210124/","result":{"data":{"site":{"siteMetadata":{"disqus":"gatsby-typescript"}},"post":{"html":"<ul>\n<li>공룡책 1장의 남은 부분을 마저 읽었다. 계속 읽으니 적응이 되는 것 같다. 놓치고 간 부분을 읽어보니 흥미로운 부분이 많아 조금씩 지체된 듯 하다. 아마 2장부터는 조금 다르지 않을까 싶다.</li>\n<li>네트워크가 끝났다. 그런데 다시 들어야 할 것 같다😭. 들으면서 내가 만약 전공생이었으면 학점이 어땠을지 상상이 갔다. ㅋㅋㅋㅋ 아무튼 한 번 훑긴 했으니 그거 바탕으로 채워 나가면 되지 싶다. DB는 그래도 괜찮을듯 한데 강의가 별로라고 하니 걱정이다.</li>\n<li>im-d 올해 첫 프로젝트를 시작했다. <a href=\"https://toss.im/every-moment\">https://toss.im/every-moment</a> 를 레퍼런스로 하려 하는데, 사용자에게 직접 피드백을 받아 개선할 수 있는 프로세스를 만드는 것이다. 프로젝트 구성을 어떻게 할지 정해야 하는데, 아주 많은 의견이 나왔다. 인프라는 지금 보니 스레드가 50개 달렸다...어느정도 공부를 해가야 할 듯 한데 내일이 걱정이다.</li>\n<li>스레드는 <code class=\"language-text\">join</code> 이 문제가 맞았다. 귀신같이 해결이 돼버렸다. 스레드에 대해 어느정도 이해는 된 듯 하여 스레드 없이 시뮬레이터를 만들었다. 그런데 <code class=\"language-text\">Java Concurrency</code>가 난관이다. <code class=\"language-text\">Future</code>...처음 보는 것인데 마음처럼 되지 않는다. 샌드박스에서 조금씩 만져봐야 할 듯 하다.</li>\n<li>스레드 확장이 불가능할 때 프로세스의 성능을 높이는 방법이 뭘까... 싱글 코어에서 스레드가 많을 경우 성능이 올라가는건 결국 cpu 점유율이 높아서인데 이것과 관련된 것인지 잘 모르겠다. 지금은 우선순위를 높여 많이 실행될 확률을 높여주는 것 정도가 생각나는데 지기와 얘기해봐야 겠다.</li>\n</ul>\n<h2 id=\"아쉬운-점\" style=\"position:relative;\"><a href=\"#%EC%95%84%EC%89%AC%EC%9A%B4-%EC%A0%90\" aria-label=\"아쉬운 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아쉬운 점</h2>\n<ul>\n<li>과제가 하나 밀린 상태다. 아마 이번 주말 까지는 계속 밀려있을 듯 하다. 자기 속도에 맞게 하는게 중요하니 천천히 해보자. 어차피 마감 압박이 있는 것이 아니니까 약한 부분은 확실히 익히고 넘어가는 것이 좋을 것 같다.</li>\n</ul>","excerpt":"공룡책 1장의 남은 부분을 마저 읽었다. 계속 읽으니 적응이 되는 것 같다. 놓치고 간 부분을 읽어보니 흥미로운 부분이 많아 조금씩 지체된 듯 하다. 아마…","timeToRead":1,"fields":{"slug":"/blog/2021-01-25--til-20210124/"},"frontmatter":{"tags":["til"],"author":{"id":"정대화","bio":"DaeHwa_Jeong@outlook.com"},"title":"TIL-20210124","updatedDate":"2021. 01. 25.","createdDate":"2021. 01. 25."}},"recents":{"edges":[{"node":{"fields":{"slug":"/blog/2021-03-03--til-20210302/"},"timeToRead":1,"frontmatter":{"tags":["til"],"title":"TIL-20210302","author":{"id":"정대화"}}}},{"node":{"fields":{"slug":"/blog/2021-03-02--til-20210301/"},"timeToRead":1,"frontmatter":{"tags":["til"],"title":"TIL-20210301","author":{"id":"정대화"}}}},{"node":{"fields":{"slug":"/blog/2021-02-28--til-20210228/"},"timeToRead":1,"frontmatter":{"tags":["til"],"title":"TIL-20210228","author":{"id":"정대화"}}}},{"node":{"fields":{"slug":"/blog/2021-02-28--플로이드-와샬-알고리즘-floyd-warshall-algorithm/"},"timeToRead":5,"frontmatter":{"tags":["알고리즘"],"title":"플로이드 와샬 알고리즘(Floyd Warshall Algorithm)","author":{"id":"정대화"}}}}]}},"pageContext":{"slug":"/blog/2021-01-25--til-20210124/","dateFormat":"YYYY. MM. DD."}},"staticQueryHashes":[]}