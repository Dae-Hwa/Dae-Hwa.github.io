{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/blog/til/2021-07-15--til-20210711-17/","result":{"data":{"site":{"siteMetadata":{"disqus":"gatsby-typescript"}},"post":{"html":"<h2 id=\"0711\" style=\"position:relative;\"><a href=\"#0711\" aria-label=\"0711 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>07.11</h2>\n<h3 id=\"알고리즘-스터디\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%8A%A4%ED%84%B0%EB%94%94\" aria-label=\"알고리즘 스터디 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알고리즘 스터디</h3>\n<ul>\n<li>map을 소트하는 방법 <a href=\"https://www.baeldung.com/java-hashmap-sort#key_5\">https://www.baeldung.com/java-hashmap-sort#key_5</a></li>\n<li>소숫점 표현시 BigDecimal 등을 사용하면 0이 생략되어 표시된다. 만약 0.0000과 같이 빈 0도 표현하려면 String.format을 사용해야 한다.</li>\n</ul>\n<h3 id=\"im-d\" style=\"position:relative;\"><a href=\"#im-d\" aria-label=\"im d permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>im-d</h3>\n<ul>\n<li>JVM의 구현은 운영체제마다 다르다. 스펙은 인터페이스 같은 느낌이고, 구현에서 어떤 시스템 콜을 사용할지 결정한다. 예를 들어, 윈도우에서는 윈도우 스레드 API를 사용하고 맥이나 리눅스에서는 Pthread API를 사용한다.</li>\n<li>데브독스는 당분간 잠정 종료될 것 같다. 주제를 가지고 토론을 해보는게 어떠냐는 얘기가 나왔는데 괜찮은 것 같다.</li>\n</ul>\n<h2 id=\"0713\" style=\"position:relative;\"><a href=\"#0713\" aria-label=\"0713 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>07.13</h2>\n<h3 id=\"코테-리뷰\" style=\"position:relative;\"><a href=\"#%EC%BD%94%ED%85%8C-%EB%A6%AC%EB%B7%B0\" aria-label=\"코테 리뷰 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코테 리뷰</h3>\n<p>류호석님이 재능기부를 해주셨다. 쉽다 생각했는데 떨어져서 많이 상심하고 있었는데, 잘못된 부분을 알고나니 큰 힘이 됐다.</p>\n<ul>\n<li>인덱스 실수가 있었다. 아무리 급하고 쉬워보여도 엣지케이스나 뻔히 보이는 예외는 꼭 테스트하자.</li>\n<li>String은 무겁다. 수가 적을때는 크게 문제되지 않겠지만, 수가 너무 많은 경우 String이 미리 주어지는게 아니라면 캐릭터를 사용하는게 더 좋겠다. 스트링 풀도 힙 영역 안에 있어서 permgen이 없어졌다해도 힙 메모리 오버가 날 수 있다. LinkedList를 선택한 것은 좋았던 것 같지만, 스택으로도 풀 수 있다니 유사한 문제를 다시 풀어봐야겠다.</li>\n</ul>\n<h2 id=\"0714\" style=\"position:relative;\"><a href=\"#0714\" aria-label=\"0714 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>07.14</h2>\n<ul>\n<li>\n<p>문자열 폭발</p>\n<ul>\n<li>어제 리뷰받았던 문제의 유사문제를 풀어봤다. 역시 String으로 하면 잘 안되고 캐릭터로 바꾸니 잘 됐다. 스택으로도 풀어봐야겠다.</li>\n</ul>\n</li>\n<li>\n<p>멀쩡한 사각형</p>\n<ul>\n<li>최대공약수를 이용할 수 있는 문제였다. 최대공약수를 잘 모르니 먼저 공부해보자. 주말에 슬빈님 풀이를 살펴보는 것도 좋은 방법일 것 같다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"0715\" style=\"position:relative;\"><a href=\"#0715\" aria-label=\"0715 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>07.15</h2>\n<ul>\n<li>최대공약수, 최소공배수를 정리했다. 내일 검수하고 게시해야겠다.</li>\n<li>\n<p>BigInteger에 gcd 메소드가 있다. 살펴보다 궁금해진 부분이 있어 디버깅을 해봤는데, int 범위를 넘어갈 경우 int범위만큼 쉬프트 하여 저장한다. 이러면 long 없이 여러개의 int 배열로 표현할 수 있기때문인 것 같다.</p>\n<p>소수찾기 메소드도 있었는데, gcd도 느리긴 하지만 소수찾기는 많이 느렸다. 내부적으로 최적화가 되지 않은 듯한 느낌이었는데, 이유를 찾아봐야 할 것 같다.</p>\n</li>\n</ul>\n<h2 id=\"0716\" style=\"position:relative;\"><a href=\"#0716\" aria-label=\"0716 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>07.16</h2>\n<ul>\n<li>멀쩡한 사각형 풀이. 최대공약수를 이용하니 쉽게 풀이 됐다. 선의 길이 공식을 사용하면 시간초과가 나온다고 한다.</li>\n<li>오픈채팅방은 현재 사용자 목록을 해쉬테이블에 저장하고, 객체 링크를 가진 리스트를 만드는 것으로 해결했다.</li>\n<li>ATDD를 함으로 얻는 장점 중 시작과 끝이 정해진다는 점, 불필요한 코드 생성이 적어진다는 점이 있다고 한다. 그리고 outside in tdd 라고 부르기도 하는 것 같다. 큰 내용을 정하고 세부 내용을 구현해서 그런가보다.</li>\n</ul>\n<h2 id=\"0717\" style=\"position:relative;\"><a href=\"#0717\" aria-label=\"0717 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>07.17</h2>\n<ul>\n<li>포스트스쿼드 프로젝트 기획 회의를 했다. 지난 주에 어느정도 틀이 나온 것으로 생각했지만, 얘기해보니 서로 생각하는게 많이 달라 보였다. 모두 괜찮다 혹은 좋은 것 같다고 얘기해도 해당 부분이 서로 다르기때문에 확인을 해야 한다. 이번에 이 점을 간과했던 것 같다. 아무튼 서로 생각했던 것을 얘기하고 서로 중요하다고 생각하는 부분 중 어떤게 더 좋은 방법인가 얘기를 해봤다. 빰빰이 정리를 잘 해주셔서 깔끔하게 정리가 됐다. 순간순간 얘기하는걸 캐치해서 정리를 해줬는데, 서로 원하는 부분을 정확히 절충해줬다. 배워야겠다.</li>\n</ul>\n<h2 id=\"todo\" style=\"position:relative;\"><a href=\"#todo\" aria-label=\"todo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TODO</h2>\n<ul>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> MockMvc 분석</p>\n<ul>\n<li>테스트 기본 인코딩이 이상함.</li>\n</ul>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> 잭슨 리퀘스트 바디 파싱 분석</p>\n<ul>\n<li>request시에 생성자 인식 못 함.</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 스프링 절대경로 서버주소 어떻게 인식하는지(어떻게 nginx 주소를 알 수 있나)?</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 우아한 객체지향</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 이런 REST로 괜찮은가</li>\n<li>\n<p>알고리즘</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <a href=\"https://www.acmicpc.net/problem/1918\">후위표기식</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <a href=\"https://www.acmicpc.net/problem/19238\">스타트택시</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <a href=\"https://www.acmicpc.net/problem/20056\">마법사 상어와 파이어볼</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <a href=\"https://www.acmicpc.net/problem/1080\">행렬</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <a href=\"https://programmers.co.kr/learn/courses/30/lessons/68645\">삼각달팽이</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> <a href=\"https://www.acmicpc.net/problem/4358\">생태학</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> <a href=\"https://programmers.co.kr/learn/courses/30/lessons/62048\">멀쩡한 사각형</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> <a href=\"https://programmers.co.kr/learn/courses/30/lessons/42888\">오픈채팅방</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> <a href=\"https://www.acmicpc.net/problem/9935\">문자열 폭발</a></li>\n</ul>\n</li>\n<li>\n<p>OS</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 4.6</li>\n</ul>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> AWS 강의듣기</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> IAM 정리하기</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 데브독스 넥스트(7월 첫주)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 엘라스틱서치</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 서브넷 구분</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> s3 이용</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 구현하기</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 깃헙액션으로 aws 배포</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> classForName 테스트</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> sticky session</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> clustered index</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> ACID</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> LocalDateTime.of nano sec</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 트랜잭션</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 영속성컨텍스트(와 트랜잭션)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> ATDD</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 인수테스트 데이터 삽입(초기화)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 인텔리j 이클립스 해쉬함수 생성 차이점</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> redis</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> redis repository equals와 어노테이션 확인해보기</li>\n<li>\n<p>블로그</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 디렉토리 구조 수정</li>\n<li>blogs/{yyyy}/{mm}/{postname}</li>\n<li>generator 수정\n-[ ] 각 분류 별로(til, post 등) 작성할 수 있도록\n-[ ] til에 날짜별 구분과 toc 추가해주도록</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 허스키 수정</li>\n<li>현재 파이프라인이 제대로 동작하지 않아서 수정 날짜 후처리가 되지 않음</li>\n</ul>\n</li>\n<li>\n<p>면접</p>\n<ul>\n<li>일했던 것 까지적으려면, 이력서에 사용했다고 명시한 기술에 대해 더 깊은 이해.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 쿼츠, 스캐줄링</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 스프링 배치, 배치</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 멀티파트</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 멀티파트 리졸버</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 시큐어코딩</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> 오라클이나 postgresql</p>\n<ul>\n<li>기본적인 차이점이나 장단은 숙지</li>\n<li>오라클 mysql 차이 공부하고 브라이언에게 다시 물어보기</li>\n<li>공간쿼리까지 준비하면 더 좋을듯...</li>\n</ul>\n</li>\n<li>운영체제, 네트워크, 데이터베이스 등 컴퓨터공학 기본지식을 재점검</li>\n<li>“신입개발자 면접 문제” 찾아서 충분히 준비(특히 SOLID, ACID 같은 기본 키워드)</li>\n<li>가장 좋아하는 정렬을 비롯하여 시간복잡도 log, n2 인 것들 각각 한가지씩은 숙지해 두시기 바랍니다(탐색도 알아두시면 좋습니다)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 자기소개는 충실히 준비</li>\n<li>화법 연습</li>\n<li>모르는 부분에 키워드 중심으로 힌트를 요청하면 좋겠습니다(“~~에 대한 말씀이신가요? 제가 잘 모르겠는데 키워드 몇 개만 주실 수 있으실까요?“)</li>\n<li>말을 확실하고 분명하게</li>\n<li>말끝을 흐리지 않게 항상 조심  </li>\n<li>분명한 어조로 답변</li>\n</ul>\n</li>\n</ul>","excerpt":"07.11 알고리즘 스터디 map을 소트하는 방법 https://www.baeldung.com/java-hashmap-sort#key_5 소숫점 표현시 BigDecimal 등을 사용하면 0이 생략되어 표시된다. 만약 0.0000과 같이 빈…","timeToRead":4,"fields":{"slug":"/blog/til/2021-07-15--til-20210711-17/"},"frontmatter":{"tags":["til"],"author":{"id":"정대화","bio":"DaeHwa_Jeong@outlook.com"},"title":"TIL-20210711~17","updatedDate":"2021. 07. 15.","createdDate":"2021. 07. 15."}},"recents":{"edges":[{"node":{"fields":{"slug":"/blog/til/2021-10-28--til-20211027-30/"},"timeToRead":3,"frontmatter":{"tags":["til"],"title":"TIL-20211027~30","author":{"id":"정대화"}}}},{"node":{"fields":{"slug":"/blog/til/2021-10-12--til-20211010-23/"},"timeToRead":6,"frontmatter":{"tags":["til"],"title":"TIL-20211010~23","author":{"id":"정대화"}}}},{"node":{"fields":{"slug":"/blog/til/2021-09-28--til-20210926-1002/"},"timeToRead":5,"frontmatter":{"tags":["til"],"title":"TIL-20210926~1009","author":{"id":"정대화"}}}},{"node":{"fields":{"slug":"/blog/til/2021-09-20--til-20210919-25/"},"timeToRead":3,"frontmatter":{"tags":["til"],"title":"TIL-20210919~25","author":{"id":"정대화"}}}}]}},"pageContext":{"slug":"/blog/til/2021-07-15--til-20210711-17/","dateFormat":"YYYY. MM. DD."}},"staticQueryHashes":[]}