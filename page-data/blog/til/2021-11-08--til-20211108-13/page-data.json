{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/blog/til/2021-11-08--til-20211108-13/","result":{"data":{"site":{"siteMetadata":{"disqus":"gatsby-typescript"}},"post":{"html":"<h2 id=\"1108\" style=\"position:relative;\"><a href=\"#1108\" aria-label=\"1108 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11.08</h2>\n<h3 id=\"cs공부1\" style=\"position:relative;\"><a href=\"#cs%EA%B3%B5%EB%B6%801\" aria-label=\"cs공부1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>cs공부1</h3>\n<p>nhn시험대비로 한 바퀴 돌리려고 한다.</p>\n<p>네이글(Nagle) 알고리즘 : TCP/IP 패킷 너무 작으면 핸드쉐이킹 많이 해야돼서 버퍼에 넣은다음 한꺼번에 처리해야한다고 한다.</p>\n<p>페이징과 세그먼테이션 : 세그먼테이션은 x86에서 사용되다 현재는 레거시로 남아있다고 한다. 리눅스는 원래부터 페이징을 사용했고 세그먼테이션은 제한적으로 허용했다고 한다.</p>\n<p>정수표현 : 예전에 공부했던 부분을 다시 봤다. 기억이 잘 안 난다... ㅋㅋ 전부터 느낀 것이지만 주기적으로 정주행을 해줘야겠다.</p>\n<p>부동소수점 : 예전에는 이해가 잘 안가 그냥 넘어갔는데 이참에 다시 봤다. 최소~최대 값의 중간값만큼 더해주는 bias 상수가 필요하다. 이 부분이 너무 이해가 안 되서 오래걸렸다. 저렇게 자세하게 써놓은 곳이 없었다.</p>\n<h3 id=\"포스트스쿼드1\" style=\"position:relative;\"><a href=\"#%ED%8F%AC%EC%8A%A4%ED%8A%B8%EC%8A%A4%EC%BF%BC%EB%93%9C1\" aria-label=\"포스트스쿼드1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>포스트스쿼드1</h3>\n<h4 id=\"lombok-boolean-boolean\" style=\"position:relative;\"><a href=\"#lombok-boolean-boolean\" aria-label=\"lombok boolean boolean permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>lombok boolean Boolean</h4>\n<p>isXXX라는 변수명일때, boolean은 isXXX, Boolean은 getIsXXX와 같이 getter메소드를 생성해준다. 리플렉션에 대응하기 위해 일관성을 조금 버린 것인지... 이유를 잘 모르겠다. 리플렉션이 필요 없는 경우는 isXXX로 메소드를 만들어주는게 일관성있긴하다. 그래서 그런건지 canXXX와 같이 다른 접두사를 붙였을때 prefix를 없애주는 어노테이션도 있다고 한다.</p>\n<h4 id=\"jpa-패치조인의-일관성\" style=\"position:relative;\"><a href=\"#jpa-%ED%8C%A8%EC%B9%98%EC%A1%B0%EC%9D%B8%EC%9D%98-%EC%9D%BC%EA%B4%80%EC%84%B1\" aria-label=\"jpa 패치조인의 일관성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JPA 패치조인의 일관성</h4>\n<p><a href=\"https://www.inflearn.com/questions/15876\">https://www.inflearn.com/questions/15876</a></p>\n<p>부모를 기준으로 필터링을 해야하는 단계가 됐다. fetch join 대상을 조건으로 사용하면 안 된다고 막연하게 알고 있었는데 나의 경우는 상관없다. 문제가 되는 부분은 컬렉션 조회에서 조건을 거는 상황이다.</p>\n<p>해당 경우 컬렉션이 모두 조회되지 않는다. 만약 이대로 저장하면 기존 데이터는 다 날아갈 것이다.</p>\n<h3 id=\"캡슐화에-대한-생각\" style=\"position:relative;\"><a href=\"#%EC%BA%A1%EC%8A%90%ED%99%94%EC%97%90-%EB%8C%80%ED%95%9C-%EC%83%9D%EA%B0%81\" aria-label=\"캡슐화에 대한 생각 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>캡슐화에 대한 생각</h3>\n<p>네트워크 찾아보다가 하위 계층으로 가면서 캡슐화시키는 부분 보고 생각해봤다. 맞는지 좀 더 생각해보자.</p>\n<p>캡슐화 -> 택배상자</p>\n<p>택배기사\n-택배 배송하려면 송장 필요.\n-내부에 뭐가 들었는지 알 필요 없음\n-박스만 전달하면 됨.</p>\n<p>수신자\n-송장보고 내 택배가 맞는지 확인하고 나면 박스(캡슐) 필요 없음\n-택배 박스까서 확인</p>","excerpt":"11.08 cs공부1 nhn시험대비로 한 바퀴 돌리려고 한다. 네이글(Nagle) 알고리즘 : TCP/IP 패킷 너무 작으면 핸드쉐이킹 많이 해야돼서 버퍼에 넣은다음 한꺼번에 처리해야한다고 한다. 페이징과 세그먼테이션 : 세그먼테이션은 x8…","timeToRead":2,"fields":{"slug":"/blog/til/2021-11-08--til-20211108-13/"},"frontmatter":{"tags":["til"],"author":{"id":"정대화","bio":"DaeHwa_Jeong@outlook.com"},"title":"TIL-20211108~13","updatedDate":"2021. 11. 08.","createdDate":"2021. 11. 08."}},"recents":{"edges":[{"node":{"fields":{"slug":"/blog/til/2021-10-31--til-20211031-1106/"},"timeToRead":4,"frontmatter":{"tags":["til"],"title":"TIL-20211031~1106","author":{"id":"정대화"}}}},{"node":{"fields":{"slug":"/blog/til/2021-10-28--til-20211027-30/"},"timeToRead":3,"frontmatter":{"tags":["til"],"title":"TIL-20211027~30","author":{"id":"정대화"}}}},{"node":{"fields":{"slug":"/blog/til/2021-10-12--til-20211010-23/"},"timeToRead":6,"frontmatter":{"tags":["til"],"title":"TIL-20211010~23","author":{"id":"정대화"}}}},{"node":{"fields":{"slug":"/blog/til/2021-09-28--til-20210926-1002/"},"timeToRead":5,"frontmatter":{"tags":["til"],"title":"TIL-20210926~1009","author":{"id":"정대화"}}}}]}},"pageContext":{"slug":"/blog/til/2021-11-08--til-20211108-13/","dateFormat":"YYYY. MM. DD."}},"staticQueryHashes":[]}