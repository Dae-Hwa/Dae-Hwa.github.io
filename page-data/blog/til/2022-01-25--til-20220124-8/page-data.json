{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/blog/til/2022-01-25--til-20220124-8/","result":{"data":{"site":{"siteMetadata":{"disqus":"gatsby-typescript"}},"post":{"html":"<h2 id=\"0124\" style=\"position:relative;\"><a href=\"#0124\" aria-label=\"0124 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01.24</h2>\n<h3 id=\"인턴1\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%ED%84%B41\" aria-label=\"인턴1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인턴1</h3>\n<h4 id=\"상태-관리\" style=\"position:relative;\"><a href=\"#%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC\" aria-label=\"상태 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상태 관리</h4>\n<p>지난 주에 이어서 상태 관리에 관한 코드를 작성했다. 오늘은 테이블을 분리했는데, OneToOne으로 작업했다. 처음에는 식별관계로 만들고 싶었지만, 굳이 복잡성을 높일 이유가 없다고 판단했다.</p>\n<p>JPA책에 조인 대상 테이블이 아닌 주인 테이블에 fk를 넣어주는게 개발자 입장에서는 편하다고 했는데, 이해를 못 하다가 저장 한 번 해보고 바로 깨달았다. 주종관계라는 것이 결국 참조를 가져올 수 있느냐에 관한 것이라 한 번에 업데이트나 조회 등이 되는지와 연관이 있는 것 같다. JPA 너무 어렵다 ..ㅋㅋ</p>\n<p>지난주와 같이 상태를 관리하는 이유는 원하는 동작을 할 수 있는 상태를 제한하고, 또 해당 상태로 갈 수 있는 방법을 제한하는데 있는데, 단순히 속성만 가지고 생각하려면 너무 머리아프다. 일관성이 깨질 가능성도 높다. 코드 작성자마다 상태에 대한 이해가 다를 수도 있기 때문이다. 자연스럽게 테이블 조회도 줄어든다.</p>\n<p>단점은. 객체지향적이지 않은 것 같다는 느낌이 얼핏 얼핏 든다. 왜 그런걸까? 객체 자체의 상태에 따라 행동하는 것이 아니라 특정 상태를 별도로 잡아놓고 상태에 따라 동작하도록 해서 그런 것 같은 느낌인데, 정확한 근거를 대기 힘들다. 생소해서 그럴 수도 있으니 좀 더 생각을 해봐야겠다.</p>\n<h4 id=\"time-zone\" style=\"position:relative;\"><a href=\"#time-zone\" aria-label=\"time zone permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>time zone?</h4>\n<p>시간이 없는 날짜를 관리하는데도 타임존이 필요할까?</p>\n<p>UTC든 KST든 날짜로만 표현한다면 그 날짜 자체가 올 것이다. DB에 DATETIME으로 저장하지 않으니 필요 없지 않을까? 하는 결론을 내렸다.</p>\n<h2 id=\"0125\" style=\"position:relative;\"><a href=\"#0125\" aria-label=\"0125 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01.25</h2>\n<h3 id=\"인턴2\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%ED%84%B42\" aria-label=\"인턴2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인턴2</h3>\n<h4 id=\"상태-관리2\" style=\"position:relative;\"><a href=\"#%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC2\" aria-label=\"상태 관리2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상태 관리2</h4>\n<p>전략 패턴이랑 상태 패턴 - 상태 패턴은 계속 변화하고, 전략 패턴은 한 번 정해지면 거의 변화가 없는 경우라고 한다. 그래서 상태 패턴은 스스로 상태변화를 계속해서 하기 때문에 주인은 현재 상태가 어떤지 신경쓰지 않아도 된다. 그냥 명령만 하면 다형성으로 알아서 처리하고 바꾼다.</p>\n<p>반면 전략 패턴은 주인이 직접 전략을 바꿔줘야 한다. 보통은 객체 생성 시 넣어주고 안 바꾸는 식으로 하는 것 같다.</p>\n<p>내가 했던 것은 상태 패턴인데, 복잡해져서 레이어를 하나 추가한 느낌이다.</p>\n<p>DSP를 만드려고 하면서 비슷하지만 다른 경우가 생겼는데, 이번에는 특정 매개변수에 따라 동작이 달라져야 한다.</p>\n<p>그런데 조회 방법까지 달라져 서비스 이후에 나누기 애매해졌다. 그래서 서비스를 여러개 만들어 선택하도록 하는 방법을 택하려고 한다. 이거는 전략패턴에 가까운 방법인듯 하다.</p>\n<h3 id=\"객체지향의-사실과-오해\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4%EC%A7%80%ED%96%A5%EC%9D%98-%EC%82%AC%EC%8B%A4%EA%B3%BC-%EC%98%A4%ED%95%B4\" aria-label=\"객체지향의 사실과 오해 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체지향의 사실과 오해</h3>\n<p>다시 읽고 있다. 읽은 부분과 메모하는 부분을 따로 표시해가며 넘어가기로 했다. 읽을때는 끄덕끄덕 하지만, 잊고 있었던 부분들이 많다.</p>\n<h2 id=\"012627\" style=\"position:relative;\"><a href=\"#012627\" aria-label=\"012627 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01.26~27</h2>\n<h3 id=\"인턴3\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%ED%84%B43\" aria-label=\"인턴3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인턴3</h3>\n<p>중간점검을 받고 질문을 했다.</p>\n<h4 id=\"최소값과-최대값-처리\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%86%8C%EA%B0%92%EA%B3%BC-%EC%B5%9C%EB%8C%80%EA%B0%92-%EC%B2%98%EB%A6%AC\" aria-label=\"최소값과 최대값 처리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최소값과 최대값 처리</h4>\n<p>가장 궁금했던 최소값과 최대값에 대한 질문이 주 였는데, 결론적으로 서버에서 처리하고 있다고 한다. 현재는 데이터가 만건정도라고 한다. 그리고 DB 스케일 아웃도 자동으로 리플리케이션을 만드는 방식으로 진행되고 있다고 한다.</p>\n<p>만약 풀에 엄청 데이터가 많으면 긁어와서 서버에서 처리하기에 버거울 것이다. 그래서 쿼리로 처리하고 DB에서 해결을 하는 방안도 생각을 해봤지만, 원하는 방향이 아니었다고 한다. 지난번에도 쿼리로 구현해와서 직접 구현하라 피드백 하셨다고 한다. 방향은 잘 맞춘 것 같아 다행이다 ㅋㅋ.</p>\n<p>그래도 만약 데이터가 너무 많으면 해당 값만 긁어오도록 수직 파티셔닝을 고려해볼 수 있을 것 같다.</p>\n<p>서버에서 감당 못할 양인데, 서버에서만 처리한다면 경매 전용 서버를 두고 잘게 자른 여러개를 경매 붙인 뒤에 승자끼리 왕중왕전을 하는 것도 생각해봤다. 어떤게 베스트일까. 라는 생각을 하면서 실버불렛이 생각났다. 그때 그때 최적의 선택을 하는게 가장 좋은 것이니 최적의 선택 후보 공부를 많이 해두자? 가 결론이 되는 것 같다.</p>\n<h4 id=\"msa의-중복되는-코드\" style=\"position:relative;\"><a href=\"#msa%EC%9D%98-%EC%A4%91%EB%B3%B5%EB%90%98%EB%8A%94-%EC%BD%94%EB%93%9C\" aria-label=\"msa의 중복되는 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MSA의 중복되는 코드</h4>\n<p>요즘 계속 궁금했던 점인데 코어에 감싸서 배포해라 혹은 코어에 새롭게 요청해서 가져와라 등 여러 가지 방법론을 들어본 것 같은데, 실제로 어떻게 하고 있는지 궁금했다.</p>\n<p>결론적으로 그냥 중복 구현을 한다고 한다. 도메인을 잘 나눠두면 결국에는 중복이 아니게 되는 경우가 많았다고 한다. 김영한님의 MSA 여행기도 한 번 봐야겠다. 메세지와 이벤트만 공부하면 이제는 이해가 될 것 같다.</p>\n<h4 id=\"경매\" style=\"position:relative;\"><a href=\"#%EA%B2%BD%EB%A7%A4\" aria-label=\"경매 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>경매</h4>\n<p>경매 부분은 생각보다 부드럽게 넘어갔다. 내가 버그를 잡는 동안 다른 구현을 잘 해주셔서 나는 바로 엘라스틱 서치 공부로 넘어갔다.</p>\n<h4 id=\"몽고db의-관계\" style=\"position:relative;\"><a href=\"#%EB%AA%BD%EA%B3%A0db%EC%9D%98-%EA%B4%80%EA%B3%84\" aria-label=\"몽고db의 관계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>몽고DB의 관계</h4>\n<p>관계형 테이블처럼 생각하면 안 되는 것 같다. 조회를 빠르게 하기 위해 도큐먼트를 사용하는데 도큐먼트끼리 참조를 시키면 오버헤드가 발생해 안티패턴이라 한다.</p>\n<p>물론 사용이 잘 안돼서 나눠놓은 것은 OK. 그런데 사용이 많이 되면서 나눠놓은 것은 좋지 않다고 한다. RDB도 비슷한 이유로 최대한 한 테이블에 많이 모아뒀던 것 같다.</p>\n<p>현재 문제점 중 하나가 계속 조회해야 하는 데이터가 쪼개져있다는 것인데, 이걸 합치는 디자인 패턴이 있다고 한다.</p>\n<p>이걸 적용해보려 하니 테이블 하나가 의미가 없어지는 것 같아 일단 생략해보고 진행하기로 했다. 만들어보고 질문 해봐야겠다.</p>\n<h4 id=\"샤딩과-파티셔닝\" style=\"position:relative;\"><a href=\"#%EC%83%A4%EB%94%A9%EA%B3%BC-%ED%8C%8C%ED%8B%B0%EC%85%94%EB%8B%9D\" aria-label=\"샤딩과 파티셔닝 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>샤딩과 파티셔닝</h4>\n<p>두루뭉술하게 알고 있었는데, 이번에 짚어봤다.</p>\n<p>파티셔닝은 수직과 수평으로 나뉜다. 말 그대로 각각 로우와 컬럼을 기준으로 나누는 것이다.</p>\n<p>샤딩은 DB를 조각으로 나누어 분산시키는 것이다. 샤딩도 수직과 수평으로 진행할 수 있고, 파티셔닝의 방법론 중 하나다.</p>\n<h2 id=\"0128\" style=\"position:relative;\"><a href=\"#0128\" aria-label=\"0128 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01.28</h2>\n<h3 id=\"인턴4\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%ED%84%B44\" aria-label=\"인턴4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인턴4</h3>\n<p>dsp까지 마무리가 됐다. 어제부터 애를 먹었던 부분은 날짜 관련된 것이었는데, Spring data를 사용하는 엘라스틱 서치에서 LocalDateTime이 사용되지 않았던 문제다.</p>\n<p>물어봐서 해결했는데, 컨버팅 과정에서 맨 뒤에 Z가 붙어있는게 제대로 변환되지 않는 것 같았다. 왜 이런지 모르겠지만...</p>\n<p>그래서 계속 시도했던 타임존 없는 데이트 포멧은 정상적으로 작동한다. 아마 어제 안 됐던 것은 스키마 초기화가 제대로 되지 않아 그랬던 것 같다.</p>\n<p>겉핥기만 하고 넘어가는 것 같아 조금 아쉽다. 엘라스틱서치는 아쉽지만 어쩔 수 없고, 적어도 몽고디비는 제대로 공부를 한 번 해봐야겠다.</p>\n<p>이제 배치가 남았는데, 간만에 하니까 잘되지 않는다. 이번에는 예습을 조금 해와야겠다.</p>\n<h3 id=\"코틀린-스터디\" style=\"position:relative;\"><a href=\"#%EC%BD%94%ED%8B%80%EB%A6%B0-%EC%8A%A4%ED%84%B0%EB%94%94\" aria-label=\"코틀린 스터디 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코틀린 스터디</h3>\n<p>이번 주 스터디는 금요일로 밀리게 됐다. 파이로가 엄청난 발표를 해주셨는데, 얻어갈만한게 있었다.</p>\n<p>함수형으로 가져가려면 플럭스 아키텍쳐를 사용하는 것이 좋다고 한다. 들었을때 말이 된다. 간단하게는 이벤트를 쏘고 이벤트는 큐에서 관리하도록 하면 로직은 상태를 직접 관리할 필요가 없다는 것인데, 어떤 컨셉인지 알 것 같다. 프런트에서 말하는 상태관리 같은 것도 이런 맥락인건지 알아봐야겠다.</p>\n<p>정작 코틀린 람다는 문법적으로 특이한 점이 없었던 것 같았는데, 내부적으로는 익명객체를 사용하도록 되어 있다는 점이 자바와 다른 점이다. 자바8이 나오기 전에 안드로이드 등을 지원하려고 먼저 나와 그랬다고 한다. 시퀀스도 같은 맥락이라 한다.</p>\n<p>여담으로 파이로는 회사 내부에 개발 문화를 이식 시키기 위해 노력중이라고 한다. 나였으면 다른 회사를 찾아봤을 것 같은데... 조금 반성하게 된다.</p>","excerpt":"01.24 인턴1 상태 관리 지난 주에 이어서 상태 관리에 관한 코드를 작성했다. 오늘은 테이블을 분리했는데, OneToOne으로 작업했다. 처음에는 식별관계로 만들고 싶었지만, 굳이 복잡성을 높일 이유가 없다고 판단했다. JPA…","timeToRead":5,"fields":{"slug":"/blog/til/2022-01-25--til-20220124-8/"},"frontmatter":{"tags":["til"],"author":{"id":"정대화","bio":"DaeHwa_Jeong@outlook.com"},"title":"TIL-20220124~8","updatedDate":"2022. 01. 25.","createdDate":"2022. 01. 25."}},"recents":{"edges":[{"node":{"fields":{"slug":"/blog/til/2022-02-09--til-20220207-18/"},"timeToRead":4,"frontmatter":{"tags":["til"],"title":"TIL-20220207~18","author":{"id":"정대화"}}}},{"node":{"fields":{"slug":"/blog/post/2022-02-06--2022년-1월-회고/"},"timeToRead":7,"frontmatter":{"tags":["회고"],"title":"2022년 1월 회고","author":{"id":"정대화"}}}},{"node":{"fields":{"slug":"/blog/til/2022-02-04--til-20220203-04/"},"timeToRead":2,"frontmatter":{"tags":["til"],"title":"TIL-20220203~04","author":{"id":"정대화"}}}},{"node":{"fields":{"slug":"/blog/til/2022-01-17--til-20220117-21/"},"timeToRead":3,"frontmatter":{"tags":["til"],"title":"TIL-20220117~21","author":{"id":"정대화"}}}}]}},"pageContext":{"slug":"/blog/til/2022-01-25--til-20220124-8/","dateFormat":"YYYY. MM. DD."}},"staticQueryHashes":[]}