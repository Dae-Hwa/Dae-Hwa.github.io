{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/blog/post/2021-04-14--2021-1분기-회고/","result":{"data":{"site":{"siteMetadata":{"disqus":"gatsby-typescript"}},"post":{"html":"<ul>\n<li>기록이 도움이 됐으면 하는 마음으로 TIL 작성</li>\n<li>블로그 1차 완성</li>\n<li>\n<p>CS</p>\n<ul>\n<li>논리 회로</li>\n<li>릴레이</li>\n<li>IF(Instruction Fetch)의 실행과정(2021-01-05)</li>\n<li>리틀엔디언, 빅엔디언</li>\n<li>2의 보수로 음수 변환 동작</li>\n</ul>\n</li>\n<li>\n<p>WSL</p>\n<ul>\n<li>WSL1과 2의 차이점. 2를 사용할 때 윈도우 디렉토리(/mnt/c)는 왜 느렸는지</li>\n<li>vscode가 admin권한 없이 실행이 되지 않았던 이유(code 명령어)</li>\n</ul>\n</li>\n<li>\n<p>회고</p>\n<ul>\n<li>뭘 했는지 잘 모르겠는 글들이 있다. 추상적으로 나타내지말고 명확하게 적자.</li>\n</ul>\n</li>\n<li>\n<p>Gradle</p>\n<ul>\n<li>이미 생성된 프로젝트를 그레이들로 바꿀 때 인식을 못하는 문제. 클래스패스와 자바 유틸</li>\n</ul>\n</li>\n<li>\n<p>Java</p>\n<ul>\n<li>ConcurrentModificationException - 컬렉션 내부의 인덱스가 바뀔 경우(Iterator를 이용하였을 때) : 2021-01-07</li>\n<li>default 메소드</li>\n</ul>\n</li>\n<li>\n<p>Network</p>\n<ul>\n<li>SSH와 SSL : 2021-01-07</li>\n<li>SSH private key와 public key</li>\n</ul>\n</li>\n<li>MS 프로젝트 관리(power toys, terminal, vscode)</li>\n<li>리눅스 만화 (joone.net)</li>\n<li>\n<p>자료구조</p>\n<ul>\n<li>링크드리스트</li>\n</ul>\n</li>\n<li>\n<p>알고리즘</p>\n<ul>\n<li>유니온 파인드와 크루스칼 알고리즘</li>\n</ul>\n</li>\n<li>\n<p>다른 언어</p>\n<ul>\n<li>리액트 상태관리</li>\n<li>클래스로 하면 클래스 내부에 상태가 포함되기 때문에 필요 없다.</li>\n<li>함수형으로 하면 해당 함수에 바인딩 될 수 있기 때문에 공통으로 관리할 공간이 필요하다.</li>\n<li>이런 상태 관리를 해주는게 리덕스다.</li>\n<li>한 군데서만 관리하니 상태관리가 다시 힘들어진다.</li>\n<li>이로 인해 여러가지 라이브러리가 나온다.</li>\n<li>MVC와 비동기</li>\n<li>비동기를 처리하기 위해 서비스를 만든다.</li>\n<li>트랜잭션을 만드는 것 처럼 async await 구문을 묶어준다.</li>\n<li>Jest</li>\n<li>watch 모드를 이용하여 디버깅 가능</li>\n<li>Husky</li>\n<li>깃 훅을 쉽게 쓸 수 있도록 도와준다.</li>\n</ul>\n</li>\n</ul>","excerpt":"기록이 도움이 됐으면 하는 마음으로 TIL 작성 블로그 1차 완성 CS 논리 회로 릴레이 IF(Instruction Fetch)의 실행과정(2021-01-05) 리틀엔디언, 빅엔디언 2의 보수로 음수 변환 동작 WSL WSL1과 2의 차이점.…","timeToRead":1,"fields":{"slug":"/blog/post/2021-04-14--2021-1분기-회고/"},"frontmatter":{"tags":["회고"],"author":{"id":"정대화","bio":"DaeHwa_Jeong@outlook.com"},"title":"2021 1분기 회고","updatedDate":"2021. 04. 14.","createdDate":"2021. 04. 14."}},"recents":{"edges":[{"node":{"fields":{"slug":"/blog/til/2021-08-09--til-20210801-07/"},"timeToRead":3,"frontmatter":{"tags":["til"],"title":"TIL-20210801~07","author":{"id":"정대화"}}}},{"node":{"fields":{"slug":"/blog/til/2021-08-09--til-20210808-14/"},"timeToRead":5,"frontmatter":{"tags":["til"],"title":"TIL-20210808~14","author":{"id":"정대화"}}}},{"node":{"fields":{"slug":"/blog/til/2021-07-19--til-20210718-24/"},"timeToRead":8,"frontmatter":{"tags":["til"],"title":"TIL-20210718~24","author":{"id":"정대화"}}}},{"node":{"fields":{"slug":"/blog/post/2021-07-16--유클리드-알고리즘-유클리드-호제법-을-이용한-최대공약수와-최소공배수/"},"timeToRead":4,"frontmatter":{"tags":["algorithm"],"title":"유클리드 알고리즘(유클리드 호제법)을 이용한 최대공약수와 최소공배수","author":{"id":"정대화"}}}}]}},"pageContext":{"slug":"/blog/post/2021-04-14--2021-1분기-회고/","dateFormat":"YYYY. MM. DD."}},"staticQueryHashes":[]}