{"version":3,"sources":["webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js","webpack:///./src/common/consts.js","webpack:///./node_modules/lodash/times.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardDescription.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardHeader.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardMeta.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/Card.js","webpack:///./src/components/BlogTitle.tsx","webpack:///./node_modules/semantic-ui-react/dist/es/elements/List/ListDescription.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/List/ListHeader.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/List/ListContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/List/ListIcon.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/List/ListItem.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/List/ListList.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/List/List.js","webpack:///./src/components/TagsCard/TagsCard.tsx","webpack:///./src/components/BlogPagination/BlogPagination.tsx","webpack:///./src/templates/blog-list.tsx","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js"],"names":["GridColumn","props","children","className","computer","color","floated","largeScreen","mobile","only","stretched","tablet","textAlign","verticalAlign","widescreen","width","classes","rest","getUnhandledProps","ElementType","getElementType","createElement","handledProps","create","GridRow","centered","columns","divided","reversed","Grid","celled","container","doubling","inverted","padded","relaxed","stackable","Column","Row","module","exports","DATE_FORMAT","POSTS_PER_PAGE","baseTimes","castFunction","toInteger","nativeMin","Math","min","n","iteratee","index","length","result","CardDescription","content","isNil","CardHeader","CardMeta","CardContent","description","extra","header","meta","val","autoGenerateKey","CardGroup","items","itemsPerRow","itemsJSX","item","key","join","_Component","Card","_getPrototypeOf2","_this","this","_len","arguments","args","Array","_key","call","apply","concat","e","onClick","value","_this$props","fluid","href","image","link","raised","handleClick","Image","defaultProps","ui","wrapped","Segment","vertical","Header","as","Icon","name","Content","Subheader","ListDescription","ListHeader","ListContent","ListIcon","ListItem","disabled","active","icon","valueProp","role","iconElement","imageElement","headerElement","descriptionElement","ListList","List","predefinedProps","itemProps","_this2","animated","bulleted","horizontal","ordered","selection","size","overrideProps","handleItemOverrides","tags","map","tag","isActive","fieldValue","tagLink","basePath","Item","style","fontWeight","Link","to","totalCount","pathname","pageCount","pageNumber","Menu","pagination","pageIndex","rangeStep","cursor","toString","withLayout","data","group","posts","edges","pathNames","location","split","ceil","currentPageNumber","Number","isInteger","parseInt","pop","reduce","acc","cur","i","Posts","Container","node","frontmatter","slug","fields","labeldTags","Label","pageContext","date","createdDate","updatedDate","Meta","fontSize","title","Description","BlogTitle","blogTitle","TagsCard","justifyContent","BlogPagination","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arr","iter","Symbol","iterator","Object","from","TypeError","arrayLikeToArray","isArray"],"mappings":"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","file":"component---src-templates-blog-list-tsx-afe6ff5cc90d4e763f56.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nexport default GridRow;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nexport default Grid;","module.exports.DATE_FORMAT = 'YYYY. MM. DD.';\nmodule.exports.POSTS_PER_PAGE = 5;\n","var baseTimes = require('./_baseTimes'),\n    castFunction = require('./_castFunction'),\n    toInteger = require('./toInteger');\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Invokes the iteratee `n` times, returning an array of the results of\n * each invocation. The iteratee is invoked with one argument; (index).\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n * @example\n *\n * _.times(3, String);\n * // => ['0', '1', '2']\n *\n *  _.times(4, _.constant(0));\n * // => [0, 0, 0, 0]\n */\nfunction times(n, iteratee) {\n  n = toInteger(n);\n  if (n < 1 || n > MAX_SAFE_INTEGER) {\n    return [];\n  }\n  var index = MAX_ARRAY_LENGTH,\n      length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n  iteratee = castFunction(iteratee);\n  n -= MAX_ARRAY_LENGTH;\n\n  var result = baseTimes(length, iteratee);\n  while (++index < n) {\n    iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = times;\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a description with one or more paragraphs.\n */\n\nfunction CardDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'description', className);\n  var rest = getUnhandledProps(CardDescription, props);\n  var ElementType = getElementType(CardDescription, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardDescription.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nexport default CardDescription;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a header.\n */\n\nfunction CardHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(CardHeader, props);\n  var ElementType = getElementType(CardHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain content metadata.\n */\n\nfunction CardMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'meta', className);\n  var rest = getUnhandledProps(CardMeta, props);\n  var ElementType = getElementType(CardMeta, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nexport default CardMeta;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\nimport CardDescription from './CardDescription';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card can contain blocks of content or extra content meant to be formatted separately from the main content.\n */\n\nfunction CardContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      textAlign = props.textAlign;\n  var classes = cx(useKeyOnly(extra, 'extra'), useTextAlignProp(textAlign), 'content', className);\n  var rest = getUnhandledProps(CardContent, props);\n  var ElementType = getElementType(CardContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(CardHeader, function (val) {\n    return {\n      content: val\n    };\n  }, header, {\n    autoGenerateKey: false\n  }), createShorthand(CardMeta, function (val) {\n    return {\n      content: val\n    };\n  }, meta, {\n    autoGenerateKey: false\n  }), createShorthand(CardDescription, function (val) {\n    return {\n      content: val\n    };\n  }, description, {\n    autoGenerateKey: false\n  }));\n}\n\nCardContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"textAlign\"];\nexport default CardContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n/**\n * A group of cards.\n */\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  var itemsJSX = _map(items, function (item) {\n    var key = item.key || [item.header, item.description].join('-');\n    return React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nCardGroup.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"content\", \"doubling\", \"items\", \"itemsPerRow\", \"stackable\", \"textAlign\"];\nexport default CardGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport cx from 'classnames';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport Image from '../../elements/Image';\nimport CardContent from './CardContent';\nimport CardDescription from './CardDescription';\nimport CardGroup from './CardGroup';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card displays site content in a manner similar to a playing card.\n */\n\nvar Card = /*#__PURE__*/function (_Component) {\n  _inherits(Card, _Component);\n\n  function Card() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Card)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      var onClick = _this.props.onClick;\n      if (onClick) onClick(e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          centered = _this$props.centered,\n          children = _this$props.children,\n          className = _this$props.className,\n          color = _this$props.color,\n          content = _this$props.content,\n          description = _this$props.description,\n          extra = _this$props.extra,\n          fluid = _this$props.fluid,\n          header = _this$props.header,\n          href = _this$props.href,\n          image = _this$props.image,\n          link = _this$props.link,\n          meta = _this$props.meta,\n          onClick = _this$props.onClick,\n          raised = _this$props.raised;\n      var classes = cx('ui', color, useKeyOnly(centered, 'centered'), useKeyOnly(fluid, 'fluid'), useKeyOnly(link, 'link'), useKeyOnly(raised, 'raised'), 'card', className);\n      var rest = getUnhandledProps(Card, this.props);\n      var ElementType = getElementType(Card, this.props, function () {\n        if (onClick) return 'a';\n      });\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), children);\n      }\n\n      if (!childrenUtils.isNil(content)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), content);\n      }\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), Image.create(image, {\n        autoGenerateKey: false,\n        defaultProps: {\n          ui: false,\n          wrapped: true\n        }\n      }), (description || header || meta) && React.createElement(CardContent, {\n        description: description,\n        header: header,\n        meta: meta\n      }), extra && React.createElement(CardContent, {\n        extra: true\n      }, extra));\n    }\n  }]);\n\n  return Card;\n}(Component);\n\n_defineProperty(Card, \"Content\", CardContent);\n\n_defineProperty(Card, \"Description\", CardDescription);\n\n_defineProperty(Card, \"Group\", CardGroup);\n\n_defineProperty(Card, \"Header\", CardHeader);\n\n_defineProperty(Card, \"Meta\", CardMeta);\n\n_defineProperty(Card, \"handledProps\", [\"as\", \"centered\", \"children\", \"className\", \"color\", \"content\", \"description\", \"extra\", \"fluid\", \"header\", \"href\", \"image\", \"link\", \"meta\", \"onClick\", \"raised\"]);\n\nexport { Card as default };","import * as React from \"react\";\nimport { Header, Segment, Icon } from \"semantic-ui-react\";\n\nexport interface BlogTitleProps {\n  name: string;\n  content: string;\n}\n\nexport default (props: BlogTitleProps) => {\n  return (\n    <Segment vertical>\n      <Header as=\"h3\">\n        <Icon name=\"newspaper\" />\n        <Header.Content>\n          {props.name}\n          <Header.Subheader>\n            {props.content}\n          </Header.Subheader>\n        </Header.Content>\n      </Header>\n    </Segment>\n  );\n};\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A list item can contain a description.\n */\n\nfunction ListDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx(className, 'description');\n  var rest = getUnhandledProps(ListDescription, props);\n  var ElementType = getElementType(ListDescription, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nListDescription.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nListDescription.create = createShorthandFactory(ListDescription, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListDescription;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A list item can contain a header.\n */\n\nfunction ListHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(ListHeader, props);\n  var ElementType = getElementType(ListHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nListHeader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nListHeader.create = createShorthandFactory(ListHeader, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useValueAndKey, useVerticalAlignProp } from '../../lib';\nimport ListDescription from './ListDescription';\nimport ListHeader from './ListHeader';\n/**\n * A list item can contain a content.\n */\n\nfunction ListContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      floated = props.floated,\n      header = props.header,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), 'content', className);\n  var rest = getUnhandledProps(ListContent, props);\n  var ElementType = getElementType(ListContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), ListHeader.create(header), ListDescription.create(description), content);\n}\n\nListContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"floated\", \"header\", \"verticalAlign\"];\nListContent.create = createShorthandFactory(ListContent, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { createShorthandFactory, getUnhandledProps, SUI, useVerticalAlignProp } from '../../lib';\nimport Icon from '../Icon/Icon';\n/**\n * A list item can contain an icon.\n */\n\nfunction ListIcon(props) {\n  var className = props.className,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(useVerticalAlignProp(verticalAlign), className);\n  var rest = getUnhandledProps(ListIcon, props);\n  return React.createElement(Icon, _extends({}, rest, {\n    className: classes\n  }));\n}\n\nListIcon.handledProps = [\"className\", \"verticalAlign\"];\nListIcon.create = createShorthandFactory(ListIcon, function (name) {\n  return {\n    name: name\n  };\n});\nexport default ListIcon;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _isPlainObject from \"lodash/isPlainObject\";\nimport _invoke from \"lodash/invoke\";\nimport cx from 'classnames';\nimport React, { Component, isValidElement } from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport Image from '../Image';\nimport ListContent from './ListContent';\nimport ListDescription from './ListDescription';\nimport ListHeader from './ListHeader';\nimport ListIcon from './ListIcon';\n/**\n * A list item can contain a set of items.\n */\n\nvar ListItem = /*#__PURE__*/function (_Component) {\n  _inherits(ListItem, _Component);\n\n  function ListItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ListItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ListItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      var disabled = _this.props.disabled;\n      if (!disabled) _invoke(_this.props, 'onClick', e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(ListItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          active = _this$props.active,\n          children = _this$props.children,\n          className = _this$props.className,\n          content = _this$props.content,\n          description = _this$props.description,\n          disabled = _this$props.disabled,\n          header = _this$props.header,\n          icon = _this$props.icon,\n          image = _this$props.image,\n          value = _this$props.value;\n      var ElementType = getElementType(ListItem, this.props);\n      var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(ElementType !== 'li', 'item'), className);\n      var rest = getUnhandledProps(ListItem, this.props);\n      var valueProp = ElementType === 'li' ? {\n        value: value\n      } : {\n        'data-value': value\n      };\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, valueProp, {\n          role: \"listitem\",\n          className: classes,\n          onClick: this.handleClick\n        }, rest), children);\n      }\n\n      var iconElement = ListIcon.create(icon, {\n        autoGenerateKey: false\n      });\n      var imageElement = Image.create(image, {\n        autoGenerateKey: false\n      }); // See description of `content` prop for explanation about why this is necessary.\n\n      if (!isValidElement(content) && _isPlainObject(content)) {\n        return React.createElement(ElementType, _extends({}, valueProp, {\n          role: \"listitem\",\n          className: classes,\n          onClick: this.handleClick\n        }, rest), iconElement || imageElement, ListContent.create(content, {\n          autoGenerateKey: false,\n          defaultProps: {\n            header: header,\n            description: description\n          }\n        }));\n      }\n\n      var headerElement = ListHeader.create(header, {\n        autoGenerateKey: false\n      });\n      var descriptionElement = ListDescription.create(description, {\n        autoGenerateKey: false\n      });\n\n      if (iconElement || imageElement) {\n        return React.createElement(ElementType, _extends({}, valueProp, {\n          role: \"listitem\",\n          className: classes,\n          onClick: this.handleClick\n        }, rest), iconElement || imageElement, (content || headerElement || descriptionElement) && React.createElement(ListContent, null, headerElement, descriptionElement, content));\n      }\n\n      return React.createElement(ElementType, _extends({}, valueProp, {\n        role: \"listitem\",\n        className: classes,\n        onClick: this.handleClick\n      }, rest), headerElement, descriptionElement, content);\n    }\n  }]);\n\n  return ListItem;\n}(Component);\n\n_defineProperty(ListItem, \"handledProps\", [\"active\", \"as\", \"children\", \"className\", \"content\", \"description\", \"disabled\", \"header\", \"icon\", \"image\", \"onClick\", \"value\"]);\n\nListItem.create = createShorthandFactory(ListItem, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListItem;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A list can contain a sub list.\n */\n\nfunction ListList(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var rest = getUnhandledProps(ListList, props);\n  var ElementType = getElementType(ListList, props);\n  var classes = cx(useKeyOnly(ElementType !== 'ul' && ElementType !== 'ol', 'list'), className);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nListList.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nexport default ListList;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _map from \"lodash/map\";\nimport _invoke from \"lodash/invoke\";\nimport cx from 'classnames';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey, useVerticalAlignProp } from '../../lib';\nimport ListContent from './ListContent';\nimport ListDescription from './ListDescription';\nimport ListHeader from './ListHeader';\nimport ListIcon from './ListIcon';\nimport ListItem from './ListItem';\nimport ListList from './ListList';\n/**\n * A list groups related content.\n */\n\nvar List = /*#__PURE__*/function (_Component) {\n  _inherits(List, _Component);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleItemOverrides\", function (predefinedProps) {\n      return {\n        onClick: function onClick(e, itemProps) {\n          _invoke(predefinedProps, 'onClick', e, itemProps);\n\n          _invoke(_this.props, 'onItemClick', e, itemProps);\n        }\n      };\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          animated = _this$props.animated,\n          bulleted = _this$props.bulleted,\n          celled = _this$props.celled,\n          children = _this$props.children,\n          className = _this$props.className,\n          content = _this$props.content,\n          divided = _this$props.divided,\n          floated = _this$props.floated,\n          horizontal = _this$props.horizontal,\n          inverted = _this$props.inverted,\n          items = _this$props.items,\n          link = _this$props.link,\n          ordered = _this$props.ordered,\n          relaxed = _this$props.relaxed,\n          selection = _this$props.selection,\n          size = _this$props.size,\n          verticalAlign = _this$props.verticalAlign;\n      var classes = cx('ui', size, useKeyOnly(animated, 'animated'), useKeyOnly(bulleted, 'bulleted'), useKeyOnly(celled, 'celled'), useKeyOnly(divided, 'divided'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useKeyOnly(link, 'link'), useKeyOnly(ordered, 'ordered'), useKeyOnly(selection, 'selection'), useKeyOrValueAndKey(relaxed, 'relaxed'), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), 'list', className);\n      var rest = getUnhandledProps(List, this.props);\n      var ElementType = getElementType(List, this.props);\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({\n          role: \"list\",\n          className: classes\n        }, rest), children);\n      }\n\n      if (!childrenUtils.isNil(content)) {\n        return React.createElement(ElementType, _extends({\n          role: \"list\",\n          className: classes\n        }, rest), content);\n      }\n\n      return React.createElement(ElementType, _extends({\n        role: \"list\",\n        className: classes\n      }, rest), _map(items, function (item) {\n        return ListItem.create(item, {\n          overrideProps: _this2.handleItemOverrides\n        });\n      }));\n    }\n  }]);\n\n  return List;\n}(Component);\n\n_defineProperty(List, \"Content\", ListContent);\n\n_defineProperty(List, \"Description\", ListDescription);\n\n_defineProperty(List, \"Header\", ListHeader);\n\n_defineProperty(List, \"Icon\", ListIcon);\n\n_defineProperty(List, \"Item\", ListItem);\n\n_defineProperty(List, \"List\", ListList);\n\n_defineProperty(List, \"handledProps\", [\"animated\", \"as\", \"bulleted\", \"celled\", \"children\", \"className\", \"content\", \"divided\", \"floated\", \"horizontal\", \"inverted\", \"items\", \"link\", \"onItemClick\", \"ordered\", \"relaxed\", \"selection\", \"size\", \"verticalAlign\"]);\n\nexport default List;","import * as React from \"react\";\nimport { GatsbyLinkProps } from \"gatsby-link\";\nimport { Card, List } from \"semantic-ui-react\";\nimport { MarkdownRemarkGroupConnection } from \"../../graphql-types\";\n\ninterface TagsCardProps extends React.HTMLProps<HTMLDivElement> {\n  tags: MarkdownRemarkGroupConnection[];\n  Link: React.ComponentClass<GatsbyLinkProps<any>>;\n  tag?: string;\n  basePath: string;\n}\n\nexport default (props: TagsCardProps) => {\n  return (\n    <List horizontal>\n      {props.tags.map((tag) => {\n        const isActive = tag.fieldValue === props.tag;\n        const activeStyle = {\n          fontWeight: \"700\",\n        };\n        const tagLink = isActive ? `${props.basePath}` : `${props.basePath}/tags/${tag.fieldValue}/`;\n        return (\n          <List.Item as=\"span\" key={tag.fieldValue}>\n            <List.Icon name=\"tag\" color={isActive ? \"grey\" : null} />\n            <List.Content style={isActive ? activeStyle : null}>\n              <props.Link to={tagLink}>\n                {tag.fieldValue} ({tag.totalCount})\n                  </props.Link>\n            </List.Content>\n          </List.Item>\n        );\n      })}\n    </List>\n  );\n};\n","import * as React from \"react\";\nimport { GatsbyLinkProps } from \"gatsby-link\";\nimport { Menu } from \"semantic-ui-react\";\nimport { times } from \"lodash\";\n\ninterface BlogPaginationProps extends React.HTMLProps<HTMLDivElement> {\n  pathname: string;\n  Link: React.ComponentClass<GatsbyLinkProps<any>>;\n  pageCount: number;\n  pageNumber: number;\n}\n\nexport default (props: BlogPaginationProps) => {\n  const { pathname, pageCount, pageNumber } = props;\n\n  if (pageCount === 1) { return null; }\n\n  return (\n    <Menu pagination>\n      {times(pageCount, (index) => {\n        const pageIndex = (index + 1);\n\n        const rangeStep = pageCount < 10 ? 5 : 3;\n        const isInRange = (pageIndex - rangeStep < pageNumber && pageIndex + rangeStep > pageNumber);\n        const isLastPage = (pageIndex === pageCount);\n        const isFirstPage = (pageIndex === 1);\n        if (isInRange || isFirstPage || isLastPage) {\n          return (\n            <Menu.Item\n              key={pageIndex}\n              style={{ cursor: \"pointer\" }}\n              as={props.Link}\n              to={`${pathname}${pageIndex}/`}\n              name={pageIndex.toString()}\n              active={pageNumber === pageIndex}\n            />\n          );\n        } else {\n          return (pageIndex === pageCount - 1 || pageIndex === 2)\n            ? <Menu.Item key={pageIndex} disabled>...</Menu.Item>\n            : null;\n        }\n      })}\n    </Menu>\n  );\n};\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport { graphql } from \"gatsby\";\nimport { Grid, Card, Container, Segment, Label, Icon } from \"semantic-ui-react\";\nimport { MarkdownRemarkConnection, ImageSharp } from \"../graphql-types\";\nimport BlogTitle, { BlogTitleProps } from \"../components/BlogTitle\";\nimport TagsCard from \"../components/TagsCard/TagsCard\";\nimport BlogPagination from \"../components/BlogPagination/BlogPagination\";\nimport { withLayout, LayoutProps } from \"../components/Layout\";\nimport { MarkdownRemark } from \"../graphql-types\";\nimport { POSTS_PER_PAGE } from \"../common/consts\";\n\ninterface BlogProps extends LayoutProps {\n  data: {\n    tags: MarkdownRemarkConnection;\n    posts: MarkdownRemarkConnection;\n  };\n  pageContext: {\n    tag?: string; // only set into `templates/tags-pages.tsx`\n    blogTitle: BlogTitleProps;\n    basePath: string;\n  };\n}\n\nconst BlogPage = (props: BlogProps) => {\n  const tags = props.data.tags.group;\n  const posts = props.data.posts.edges;\n  const pathNames = props.location.pathname.split(\"/\");\n  const pageCount = Math.ceil(props.data.posts.totalCount / POSTS_PER_PAGE);\n  const currentPageNumber =\n    Number.isInteger(Number.parseInt(pathNames[pathNames.length - 1] || pathNames[pathNames.length - 2]))\n      ? Number.parseInt(pathNames.pop() || pathNames.pop())\n      : 1;\n  const pathname = pathNames.reduce((acc, cur, i) => {\n    return `${acc}${cur === \"\" ? \"\" : `${cur}/`}`;\n  }, \"/\");\n\n  // TODO export posts in a proper component\n  const Posts = (\n    <Container>\n      {posts.map(({ node }: { node: MarkdownRemark }) => {\n        const {\n          frontmatter,\n          fields: { slug },\n        } = node;\n        const labeldTags = frontmatter.tags.map((tag) => (\n          <Label key={tag}>\n            <Link to={`${props.pageContext.basePath}/tags/${tag}/`}>{tag}</Link>\n          </Label>\n        ));\n\n        const date = frontmatter.createdDate != frontmatter.updatedDate ? `${frontmatter.createdDate} (updated: ${frontmatter.updatedDate})` : frontmatter.createdDate;\n\n        const extra = (\n          <Card.Meta>\n            <span style={{ fontSize: \"8pt\" }} className=\"date\">\n              {date}\n            </span>\n          </Card.Meta>\n        );\n\n        return (\n          <Card\n            key={slug}\n            fluid\n          // description={tags}\n          // meta={extra}\n          // link\n          >\n            <Card.Content>\n              <Card.Header href={slug}>{frontmatter.title}</Card.Header>\n              <Card.Meta>{extra}</Card.Meta>\n              <Card.Description>{labeldTags}</Card.Description>\n            </Card.Content>\n          </Card>\n        );\n      })}\n    </Container>\n  );\n\n  return (\n    <Container>\n      {/* Title */}\n      <BlogTitle name={props.pageContext.blogTitle.name} content={props.pageContext.blogTitle.content} />\n      <div>\n        <TagsCard Link={Link} tags={tags} tag={props.pageContext.tag} basePath={props.pageContext.basePath} />\n      </div>\n      {/* Content */}\n      <Segment vertical>\n        <Grid padded style={{ justifyContent: \"space-around\" }}>\n          <div>\n            {Posts}\n            <Segment vertical textAlign=\"center\">\n              <BlogPagination\n                Link={Link}\n                pathname={pathname}\n                pageCount={pageCount}\n                pageNumber={currentPageNumber}\n              />\n            </Segment>\n          </div>\n        </Grid>\n      </Segment>\n    </Container>\n  );\n};\n\nexport default withLayout(BlogPage);\n\nexport const pageQuery = graphql`\n  query BlogList(\n    $dateFormat: String\n    $postsPerPage: Int\n    $skip: Int\n    $filter: MarkdownRemarkFilterInput # $tag: String\n  ) {\n    # Get tags\n    tags: allMarkdownRemark(filter: $filter) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n\n    # Get posts\n    posts: allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___createdDate] }\n      filter: $filter\n      limit: $postsPerPage\n      skip: $skip\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          timeToRead\n          fields {\n            slug\n          }\n          frontmatter {\n            tags\n            title\n            updatedDate(formatString: $dateFormat)\n            createdDate(formatString: $dateFormat)\n          }\n        }\n      }\n    }\n  }\n`;\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;"],"sourceRoot":""}